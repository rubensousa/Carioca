/*
 * Copyright 2024 RÃºben Sousa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id("java-gradle-plugin")
    alias(libs.plugins.jetbrains.kotlin.jvm)
    alias(libs.plugins.kotlin.serialization)
}

if (parent?.name == "carioca") {
    apply plugin: libs.plugins.maven.publish.get().pluginId
}

gradlePlugin {
    plugins {
        register("allure") {
            id = "com.rubensousa.carioca.report.allure"
            implementationClass = "com.rubensousa.carioca.report.android.allure.gradle.AllureReportPlugin"
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    implementation(libs.carioca.report.json)
    implementation(libs.gradle.kotlin)
    implementation(libs.gradle.android)
    implementation(libs.gradle.android.tools)
    implementation(libs.kotlinx.serialization.json)
    testImplementation(libs.bundles.test.unit)
}
