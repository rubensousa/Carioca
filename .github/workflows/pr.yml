name: Pull requests

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g"

on:
  pull_request:
    branches:
      - 'main'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - uses: actions/setup-java@v4.2.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: false
          cache: "gradle"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build docs
        run: |
          ./gradlew dokkaHtmlMultiModule
          mv ./build/dokka/htmlMultiModule docs/api

      - name: Install dependencies
        run: |
          pip install mkdocs-material mkdocs-material-extensions mkdocs-markdownextradata-plugin

      - name: Build docs
        run: mkdocs build -v

  build_libraries:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.2.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: false
          cache: "gradle"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check and build integration libraries
        run: ./gradlew --build-cache check assemble --stacktrace

  instrumented_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, x86]
        target: [ google_apis, android-tv ]
        api-level: [34]
        profile: [pixel_6, tv_1080p]
        exclude:
          - target: google_apis
            profile: tv_1080p
          - target: android-tv
            profile: pixel_6
          - arch: x86
            profile: pixel_6
          - arch: x86_64
            profile: tv_1080p
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-java@v4.2.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: false
          cache: "gradle"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          android: false

      # Retrieve the cached emulator snapshot.
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.profile }}

      - name: Create AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          disable-animations: false
          force-avd-creation: false
          ram-size: 4096M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot."

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          profile: ${{ matrix.profile }}
          avd-name: avd-${{ matrix.api-level }}-${{ matrix.profile }}
          disable-animations: false
          force-avd-creation: false
          ram-size: 4096M
          emulator-options: -no-window -no-snapshot-save -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            ./gradlew uninstallAll
            adb shell settings put global verifier_verify_adb_installs 0
            ./gradlew --build-cache sampleAndroidTests
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.profile }}-${{ matrix.api-level }}--instrumentation-test-results
          path: |
            logs/**
            build/outputs/allure-results
        if: always()